"""
Example shows how to use Artap together with localy installed Comsol Multiphysics

"""
import os
from artap.executor import LocalFEMMExecutor
from artap.problem import Problem
from artap.algorithm_scipy import ScipyOpt


class FEMMProblem(Problem):
    """ Describe simple one objective optimization problem."""

    def set(self):
        self.name = "FEMMProblem"

        # Parameters must be defined in the FEMM model
        self.parameters = [{'name': 'a', 'initial_value': 10, 'bounds': [0.1, 100]},
                           {'name': 'b', 'initial_value': 10, 'bounds': [0.1, 100]}]

        self.costs = [{'name': 'F1', 'criteria': 'minimize'}]
        self.output_files = ["torque.txt"]

        # Executor serves for calling the FEMM
        self.executor = LocalFEMMExecutor(self,
                                          script_file="AF_OpenCircuitAnalysis_v1.lua",
                                          output_files=["output.txt"])

    # Calculate the value of the objective function
    def evaluate(self, individual):
        U = 10
        C_req = 5e-12  # the capacity 5 pF is required
        energy = self.executor.eval(individual)[0]
        capacity = 2 * energy / U ** 2
        f = abs(capacity - C_req)
        print(capacity)
        return [f / C_req]  # method evaluate must return list

    # This method processes files generated by 3rd party software, depends on files format
    def parse_results(self, output_files, individual):
        #output_string.replace('\n','')
        #res_vec = output_string.split(',')
        #print(output_string)
        with open(output_files[0]) as file:
            content = file.readlines()
            print(content)
        # return [float(content[0])]
        return [5]


problem = FEMMProblem()  # Creating problem
algorithm = ScipyOpt(problem)  # Algorithm from Scipy was choosen
algorithm.options['algorithm'] = 'COBYLA'
algorithm.options['n_iterations'] = 2
algorithm.run()
